Decide whether to proceed with JPA.


Try implementing dummy header-based security, using Spring security filter.
  Using IE, is any SSO header available at the server?
  In Spring security filter, retrieve SSO header and lookup user in local Map created at services app startup time.
    Refresh the map periodically or when requested via api.
  Add sso_key to Employee with ix

Implement getUserContext REST api method
  +UserContext
    User
    LabGroup
     add ids (pks) to these in dtos



Views
-----
[MS] manage active samples
  Import active samples and their employee work assignments from FACTS.
  List currently active samples for the lab, activate and deactivate samples.
  Make a named sample list from selected samples.
  Allow searching samples by name/pattern optionally within a selected sample list.
  Allow multiple selection.
    When selection is non-empty:
      Enable link to ASR view to associate samples with lab resources
      Save selection list to Angular service within client for communication between views.


[ASR] associate active samples with lab resources
  1) Select one or more active samples, associate with batch of resource codes received from barcode scanner.
  2) Display and/or print selected sample barcodes with descriptive information, so user can form associations using
     only a barcode scanner away from their computer. Sample barcodes should be distinguishable from lab resource codes,
     via a special prefix. Support receiving alternating sequence of sample-codes and resource codes to form associations:
     _______ sample code __________ resource code ___________
       |   |_______________|  |______________________|   |
       |_________________________________________________|
  In either case (1 or 2), present a matrix showing resources x samples for confirmation before saving the associations.
  Allow user to drag selected resources in a column to another column to correct associations (previous values at drop
  target go to holding area).

manage tests in progress
  criteria for display are some combination of the following depending on checked options:
    not synced to FACTS
    not signed completed or reviewed
    test shares sample number with an active sample which is assigned to current user or no user
      Assigned user requirement should be able to be easily omitted via checkbox ("show tests with samples assigned to other users").
  edit test data
  review signoff and FACTS submission (requires special REVIEW role)
  print test data
  delete tests



[dto and ui] Each test view should be able to know the tests current stage, and optionally show each stage's data contents individually.
  + StagedLabTest interface
      stages: string[]
      currentStage: string
  UI will allow flipping through stages for a test.
  Grid of active tests will just show current stages by default.


Client/Server Project Skeletons
-------------------------------
Create dto class SalImpVidasTestConfig
  insert into sampling_method
    (name, description, sub_grams, num_subs, num_comps, comp_grams, subs_per_comp)
    values (
      '25gx15S-1C-3375mlB',
      '25 grams from each of 15 subs tested as one 375g composite, 3375mls of pre-enriched broth added',
      25, 15, 1, 375, 15
    );
  insert into sampling_method
    (name, description, sub_grams, num_subs, num_comps, comp_grams, subs_per_comp)
    values (
      '25gx30S-2C-3375mlB',
      '25 grams from each of 30 subs tested as two 375g composites, 3375mls of pre-enriched broth/composite',
      25, 30, 2, 375, 15
    );
  Should serialize to something like:
      { samplingMethodChoices: [{ subGrams:... , numSubs:..., numComps:..., compGrams:..., subsPerComp:... }, ...] }

Create EmployeeRepository with lookup by username.
  Add unit test.
    http://www.baeldung.com/spring-jpa-test-in-memory-database

Configure Spring security for password authentication.
    https://www.callicoder.com/spring-boot-spring-security-jwt-mysql-react-app-part-1/
    or
    http://websystique.com/spring-security/spring-security-4-password-encoder-bcrypt-example-with-hibernate/



# Test password auth:
POST http://localhost:8080/ARLIMS/api/auth/password
Accept: application/json
Cache-Control: no-cache
Content-Type: application/x-www-form-urlencoded

username=SCH1&password=123

###

Create authentication-related dto types
    +AuthenticationController
      authenticate(username, password)
        Lookup username in db (short_name).
        Hash posted password, compare with password from db.
        Return auth result structure.


Login Page
  Create Angular authentication service.
    + authenticate
    Post user (short) name and password to web service, emit authentication result event.
    Either store authentication result in the controller or to local storage.
  Create login form component, with auth service injected.
    Subscribe to auth events.
    If successful, route to home, else show an alert that authentication failed.

Home
  Requires login.
    Logged in employee determines the lab group for the app globally.
  Choice of tests determined from the lab group.
  List of recent test activity for the user/lab group.

Imported Salmonella Vidas test view.
  Create form via css grid.


Write service to fetch sample assignments for all users of a given facility, optionally limited to those for a given user and date range.
Write service to fetch form data for a given test type and sample, pack.
  Return as lab_test struct.
  If no existing record is found, create a new one with empty test as json. Null last_saved/by fields will indicate that it's new.
Write service to store form data for a given test type and sample, pack, and user (for last_saved_by).

App Pages
---------
  Login
    On successful authentication:
        Retrieve lab group and other users in the same lab group, set these in user context service.
        Redirect to home.
  Home
    Search box for tests/samples.
    Show tests in progress for the current user or all users in the lab group, or by test type.
    Show current sample assignments for the user or all users in the lab group.
      Show attached list of available tests registered for the lab group to allow starting a test for this sample.
    Show general list of tests for the lab group for starting a new test with manually entered sample info.



Query Rick about Sample/PAC combinations, work requests etc.
  Q: What is PAC code?
  Q: How are samples assigned to employees? (PAC specified?)
  Q: Should we have an employee id separate from the FACTS employee id?




Angular Services
----------------
[Current]EmployeeService
  State:
    Employee record for logged in employee.
    Lab group name.
    Employee records for all employees in the lab group.


Vidas Data Retrieval
--------------------
QR Codes
  https://davidshimjs.github.io/qrcodejs/
    Standalone, lightweight, not sure about QR code sizes supported.
  https://demos.shieldui.com/web/qrcode/basic-usage
    Depends on jquery and shieldui, supports all sizes of QR codes.
    http://demos.shieldui.com/web/qrcode/api
  Version 40 bar code with 1276 bytes of data:
    https://softwareengineering.stackexchange.com/questions/251062/how-many-bytes-can-i-fit-into-a-qr-code-with-low-error-correction

Make a grid of QR codes for input text data.
  Try inline block layout for the qr codes.
  Divide data into fixed size chunks, encode each.


Schema/Entities
---------------


FACTS Data
----------
FACTS_WORK_REQUESTS
  RQST_DATE
  STATUS_CODE
  PRSN_ID
FACTS_WORK
  ASSGNR_PRSN_ID
  ESTMTD_START_DATE
  RQSTR_TRGT_CMPLTN_DATE
  STATUS_CODE
  SMPL_TRCKNG_NUM
  PRSN_ID
|
-< FACTS_WORK_PACS
     PAC_CODE

FACTS_SAMPLE_TRACKING_NUMBERS
  SMPL_TRCKNG_NUM
  PRSN_ID

FACTS_SAMPLES
  SMPL_TRCKNG_NUM

FACTS_SAMP_PROD_PACS
  SAMP_PROD_ID
  SMPL_TRCKNG_NUM (num) [not required]
  PAC_CODE (alpha) [not required]

FACTS_SAMPLE_ANALYSES
  SMPL_ANLYS_ID
  SMPL_TRCKNG_NUM
  SMPL_TRCKNG_SUB_NUM
  PAC_CODE

FACTS_AS_MICROBIOLOGY
  ANLYS_MIC_ID
  SMPL_ANLYS_ID
  PRBLM_CODE
  MTHD_CODE
  MTHD_SRC_CODE
  SUBS_EXMND_NUM
  SUBS_USED_CMPST_NUM
  CMPSTS_EXMND_NUM
  SUBS_DTCT_FND_NUM
|
-< FACTS_AS_MIC_LMT_SAMP_PREP
 |
 -< FACTS_AS_LMT_FINDS
 |
 -< FACTS_AS_LMT_ADD_PREP
|
-< FACTS_AS_MIC_FINDS
 |
 -< FACTS_AS_MIC_IDS
|
-< FACTS_AS_MIC_KIT_TESTS
|
-< FACTS_AS_MIC_PRSV_CATEGORIES
 |
 -< FACTS_AS_MIC_PRSV_PREPS
  |
  -< FACTS_AS_MIC_PRSV_FINDS
   |
   -< FACTS_AS_MIC_PRSV_OBSRVTNS


FACTS_ANALYSIS_GRP1
  ANLYS_GRP1_ID
  SMPL_ANLYS_ID
  MTHD_CODE
  INSTRMT_CODE
  SUBS_EXMND_NUM
  SUBS_PSTV_NUM
  TEST_KIT_RSLT_CODE
FACTS_ANALYSIS_GRP1_FINDINGS
  ANLYS_GRP1_FNDNG_ID
  SUB_NUM_CODE
  ANLYS_GRP1_ID
  AMT_FND_NUM
  AMT_UNIT_CODE
  SPIKE_MTRL_CODE
  SPIKE_LVL_NUM
  SPIKE_UNIT_CODE


Questions
---------
Are jars and bags disposable or to be entered into database for display in dropdown lists?

For John:
  Is subs per comp always num comps / num subs (each sub assigned into exactly one composite)?
    extracted_grams_per_sub, num_subs, num_comps, comp_grams, num_subs_per_comp
    Need to capture deviations via note? Or capture count of subs within each component?
  Is it necessary to carry around pack code with the sample id everywhere?
    I've designed this way, but want to check that this is really necessary.




Hardware
--------
  laptops
  batching barcode scanners.
    https://www.zebra.com/us/en/support-downloads/mobile-computers/handheld/mc9090-wm.html

Security
--------
SAML for single sign on?

App ID: 0757



Functionality
-------------
Samples List
  No current user, instead each signoff action requires authentication.
  Typeahead/live search filtering.
  User selection for filtering by sample assignments.

Waterbath whiteboard
    Add general screen to query for samples for a given test type and/or time period, and attach timestamped notes easily.

Allow entering/editing equipment, associating with analysts.

  Forms
    For each boolean choice, form should include a yes/no or pos/neg radio group with same form field name and values 'Y'/'N' or '+'/-'.
      Hopefully this will map naturally to the json field value of null/'+'/'-' etc.


API Doc
-------
Maybe generate api doc via https://www.vojtechruzicka.com/documenting-spring-boot-rest-api-swagger-springfox/


EPLC
----
Security doc required: System Security Plan (SSP), Risk Assessment, and Authorization to Operate (ATO)

