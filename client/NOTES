


In pre-enr component, subscribe to value changes of the num subs/comps controls directly,
not through ui. That way changes that were not made through the ui will not be missed.


When auto-merging during save attempt changes number of subs or composites (due to no conflict
for the particular field(s)), the change events are not fired so the main test component is not
notified of the change and the number of vidas detection controls is not changed.


Test unit detections are being saved as an object with the array's numeric index keys.
  Probably as a result of the merge operation.

Find problem with conflicts merge causing "won't replace non-atomic value with atomic value".j
  Maybe just do away with that check since there may be valid cases for it (moment obj vs date string maybe).
  When merge is fixed, make sure that if #subs/composites changes because of auto-merge, then the proper change events
  are fired so that the number of vidas detection controls is updated.

Vidas Stage
   Sample detections
      Allow pasting in results or loading from file (see Vidas results output).

Commit Notes
------------



Report Customization
--------------------
Allow customizing the test data on client side before invoking generic field value injection into pdf.
  E.g., replace boolean values for growth with appropriate strings.
  Build a string for the composites results, or figure out how to display an array of values.

Add BAM link in each test.
  Add links popup menu button in bottom toolbar.

Each test needs to be able to allow free-form entry of "continuation page".

Add filters to samples listing.

Create service used by app component to set a title in center of toolbar (maybe switch to grid layout).

TestsService.saveTestData
   Make sure that null value can conflict with non-null value.

Research API, try updating samples from FACTS.

Add ability to attach files to a sample and/or test.

test data entry component
-------------------------
  Allow pasting resource codes to be automatically matched to form fields by type.
  button to apply resources
    Highlight application points in the form.
    Distinguish applied resource codes from those that didn't match any form fields.


Decide how signatures in forms will be handled.
  They can't be handled like other form data, both components must be set automatically only when user passes an authentication test.
  Probably only the form stage should be signable as complete/correct and achieved outside the form?


[SL] Samples Listing

[WB] Water bath whiteboard
  Add general screen to display samples/tests and attach status notes.

[R] manage lab resources
  usual crud ops

[MU] manage employees/users for user's lab group
  usual crud ops

[MLG] manage lab groups

[MTRA] manage test/lab-resource associations (managed and unmanaged)


[dto and ui] Each test view should be able to know the tests current stage, and optionally show each stage's data contents individually.
  + StagedLabTest interface
      stages: string[]
      currentStage: string
  UI will allow flipping through stages for a test.
  Grid of active tests will just show current stages by default.

Create a new service for setting page title in center of toolbar, use this to hold sample listing page title, "Samples".


Forms
  For each boolean choice, form should include a yes/no or pos/neg radio group with same form field name and values 'Y'/'N' or '+'/-'.
    Hopefully this will map naturally to the json field value of null/'+'/'-' etc.

.flexbox-ex {
   display: flex;
   flex-flow: row wrap;
   justify-content: flex-start; // main axis: flex-start/end, center, space-around, space-between, space-evenly
   align-items: stretch;        // cross axis: stretch, center, flex-start, flex-end
}


Barcode Scanners
----------------
Wedge utility for Zebra DS6707
https://www.zebra.com/us/en/support-downloads/software/utilities/cordless-scantoconnect.html

Test Resource Codes
-------------------
BAG-123
JAR-123456
JAR-23456
RV-7361256
TT-228181
XX-112
XX-113

